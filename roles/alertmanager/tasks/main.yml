---
    - name: Create alertmanager group
      group:
        name: '{{ alertmanager_group }}'
        state: present

    - name: Create alertmanager user
      user:
        name: '{{ alertmanager_user }}'
        group: '{{ alertmanager_group }}'
        shell: '{{ "/usr/sbin/nologin" if ansible_os_family == "Debian" else "/sbin/nologin" }}'
        create_home: no
        system: yes

    - name: Create necessary directories
      file:
        path: '{{ item }}'
        state: directory
        owner: '{{ alertmanager_user }}'
        group: '{{ alertmanager_group }}'
        mode: '0755'
      loop:
        - '{{ alertmanager_home }}'
        - '{{ alertmanager_data }}'

    - name: Check internet connectivity
      uri:
        url: 'https://github.com/'
        method: GET
        return_content: no
      register: internet_check
      retries: 3
      delay: 5
      until: internet_check.status == 200
      failed_when: internet_check.status == 0

    - name: Download Alertmanager package
      get_url:
        url: 'https://github.com/prometheus/alertmanager/releases/download/v{{ version }}/alertmanager-{{ version }}.linux-amd64.tar.gz'
        dest: '/tmp/alertmanager-{{ version }}.linux-amd64.tar.gz'
        mode: '0644'

    - name: Extract Alertmanager package
      unarchive:
        src: '/tmp/alertmanager-{{ version }}.linux-amd64.tar.gz'
        dest: '/tmp/'
        remote_src: yes

    - name: Install Alertmanager binary
      copy:
        src: '/tmp/alertmanager-{{ version }}.linux-amd64/alertmanager'
        dest: '/usr/local/bin/alertmanager'
        owner: '{{ alertmanager_user }}'
        group: '{{ alertmanager_group }}'
        mode: '0755'
        remote_src: yes

    - name: Install amtool binary
      copy:
        src: '/tmp/alertmanager-{{ version }}.linux-amd64/amtool'
        dest: '/usr/local/bin/amtool'
        owner: '{{ alertmanager_user }}'
        group: '{{ alertmanager_group }}'
        mode: '0755'
        remote_src: yes

    - name: Copy Alertmanager configuration file
      template:
        src: alertmanager.yml.j2
        dest: '{{ alertmanager_home }}/alertmanager.yml'
        owner: '{{ alertmanager_user }}'
        group: '{{ alertmanager_group }}'
        mode: '0644'

    - name: Set Alertmanager peers
      set_fact:
        alertmanager_peers: "{{ groups['alertmanager_nodes'] | difference([inventory_hostname]) | map('extract', hostvars, ['ansible_default_ipv4', 'address']) | list }}"

    - name: Configure systemd service for Alertmanager
      template:
        src: alertmanager.service.j2
        dest: /etc/systemd/system/alertmanager.service
        owner: root
        group: root
        mode: '0644'

    - name: Reload systemd daemon
      systemd:
        daemon_reload: yes

    - name: Enable and start Alertmanager service
      systemd:
        name: alertmanager.service
        enabled: yes
        state: started
    - name: Check if Alertmanager is ready
      uri:
        url: "http://localhost:{{ alertmanager_port }}/-/ready"
        method: GET
        status_code: 200
      register: alertmanager_ready
      retries: 5
      delay: 5
      until: alertmanager_ready.status == 200

    - name: Check Alertmanager cluster status
      uri:
        url: "http://localhost:{{ alertmanager_port }}/api/v2/status"
        method: GET
        return_content: yes
      register: alertmanager_status

    - name: Display Alertmanager cluster peers
      debug:
        msg: "Cluster Peers: {{ alertmanager_status.json.cluster.peers | map(attribute='address') | join(', ') }}"
